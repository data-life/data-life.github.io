<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Something Pithy about Data</title>
    <link>https://data-life.github.io/</link>
    <description>Recent content on Something Pithy about Data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Tue, 04 Oct 2016 12:03:44 +0000</lastBuildDate>
    
	<atom:link href="https://data-life.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview of Data Lifecycle Concepts</title>
      <link>https://data-life.github.io/concepts/overview/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/concepts/overview/</guid>
      <description>This is the page that shows you the most high level view of the lifecycle. Each section will take you to posts with more specific information for each of the domains. Explore for more posts and details
 </description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/analysis/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/analysis/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/etl/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/etl/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/mobility/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/mobility/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/post/elasticsearch/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/post/elasticsearch/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/processing/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/processing/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/storage/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/storage/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>The Split Brain Problem</title>
      <link>https://data-life.github.io/visualization/splitbrain/</link>
      <pubDate>Tue, 04 Oct 2016 12:03:44 +0000</pubDate>
      
      <guid>https://data-life.github.io/visualization/splitbrain/</guid>
      <description>The Problem Consider a two node cluster that contains one index with a replication factor of one. This means that each shard of data in the index resides on one node and is replicated to the other node. One of these nodes is elected the master of the cluster to handle administrative tasks and it holds the primary shard for the index. What happens when there is a break in communication between the two nodes for whatever reason?</description>
    </item>
    
    <item>
      <title>Predictable IP For Your Master Node</title>
      <link>https://data-life.github.io/post/emr/predictableipforyourmaster/</link>
      <pubDate>Wed, 24 Aug 2016 12:42:42 +0000</pubDate>
      
      <guid>https://data-life.github.io/post/emr/predictableipforyourmaster/</guid>
      <description>The Problem Sometimes you are looking to be able to specify both the public and the private IP for an EMR cluster when it launches. This allows you to not have to change any existing infrastructure, while still being able to decommission an EMR cluster whenever it is needed and provision a new one. Currently you are able to attach an EIP to the master instance, but this does not solve the issue for private clusters and is cumbersome if clusters are constantly being provisioned/decommissioned.</description>
    </item>
    
    <item>
      <title>Use Powershell to find the best Spot Instance</title>
      <link>https://data-life.github.io/post/scripting/powershellbestspotinstance/</link>
      <pubDate>Wed, 10 Aug 2016 12:50:26 +0000</pubDate>
      
      <guid>https://data-life.github.io/post/scripting/powershellbestspotinstance/</guid>
      <description>How do you find the best value for money Spot Instance Sometimes you are just looking for the cheapest way to do something in AWS. Initially you look at spot instances, but realistically you need a monster machine to achieve what you are looking to do. Either your task is CPU or Memory intensive and so you look at using spot prices for one of the larger AWS instances. Assuming this task you are looking to achieve can be run using a cluster on EC2 or one that supports spot instances, it turns out that the best value for money is not always the largest instance types.</description>
    </item>
    
    <item>
      <title>Anatomy of a Cluster Configuration Change in Elasticsearch</title>
      <link>https://data-life.github.io/post/elasticsearch/clusterconfigurationchanges/</link>
      <pubDate>Sat, 06 Aug 2016 11:42:26 +0000</pubDate>
      
      <guid>https://data-life.github.io/post/elasticsearch/clusterconfigurationchanges/</guid>
      <description>When ever any change has been made to an AWS Elasticsearch cluster, whether it is changing the instance type for your data nodes, adding master nodes or changing an access policy, there is a process that happens in the background that should be understood before a change is commited so you can understand how a change can affect your cluster.
The first step that happens in Elasticsearch will provision a new cluster with your new configuration.</description>
    </item>
    
  </channel>
</rss>